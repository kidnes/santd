!function(t){function a(a){for(var s,p,c=a[0],l=a[1],r=a[2],d=0,i=[];d<c.length;d++)p=c[d],Object.prototype.hasOwnProperty.call(e,p)&&e[p]&&i.push(e[p][0]),e[p]=0;for(s in l)Object.prototype.hasOwnProperty.call(l,s)&&(t[s]=l[s]);for(u&&u(a);i.length;)i.shift()();return o.push.apply(o,r||[]),n()}function n(){for(var t,a=0;a<o.length;a++){for(var n=o[a],s=!0,c=1;c<n.length;c++){var l=n[c];0!==e[l]&&(s=!1)}s&&(o.splice(a--,1),t=p(p.s=n[0]))}return t}var s={},e={7:0},o=[];function p(a){if(s[a])return s[a].exports;var n=s[a]={i:a,l:!1,exports:{}};return t[a].call(n.exports,n,n.exports,p),n.l=!0,n.exports}p.m=t,p.c=s,p.d=function(t,a,n){p.o(t,a)||Object.defineProperty(t,a,{enumerable:!0,get:n})},p.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},p.t=function(t,a){if(1&a&&(t=p(t)),8&a)return t;if(4&a&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(p.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&a&&"string"!=typeof t)for(var s in t)p.d(n,s,function(a){return t[a]}.bind(null,s));return n},p.n=function(t){var a=t&&t.__esModule?function(){return t.default}:function(){return t};return p.d(a,"a",a),a},p.o=function(t,a){return Object.prototype.hasOwnProperty.call(t,a)},p.p="/santd/";var c=window.webpackJsonp=window.webpackJsonp||[],l=c.push.bind(c);c.push=a,c=c.slice();for(var r=0;r<c.length;r++)a(c[r]);var u=l;o.push([125,0,1]),n()}({108:function(t,a){t.exports=' <div class="content"><div class="markdown"><p>在多数业务情况下，Santd需要在设计区域内解决大量信息收纳的问题，因此在 12 栅格系统的基础上，我们将整个设计建议区域按照 24 等分的原则进行划分。</p> <p>划分之后的信息区块我们称之为『盒子』。建议横向排列的盒子数量最多四个，最少一个。『盒子』在整个屏幕上占比见上图。设计部分基于盒子的单位定制盒子内部的排版规则，以保证视觉层面的舒适感。</p> <h2 id="%E6%A6%82%E8%BF%B0"><a class="header-anchor" href="#%E6%A6%82%E8%BF%B0">#</a> 概述</h2> <p>布局的栅格化系统，我们是基于行（row）和列（col）来定义信息区块的外部框架，以保证页面的每个区域能够稳健地排布起来。下面简单介绍一下它的工作原理：</p> <ul> <li>通过row在水平方向建立一组<code>column</code>（简写col）</li> <li>你的内容应当放置于 <code>col</code> 内，并且，只有 <code>col</code> 可以作为 <code>row</code> 的直接元素</li> <li>栅格系统中的列是指1到24的值来表示其跨越的范围。例如，三个等宽的列可以使用.col-8来创建</li> <li>如果一个 <code>row</code> 中的 <code>col</code> 总和超过 24，那么多余的 <code>col</code> 会作为一个整体另起一行排列</li> </ul> <h2 id="flex-%E5%B8%83%E5%B1%80"><a class="header-anchor" href="#flex-%E5%B8%83%E5%B1%80">#</a> Flex 布局</h2> <p>我们的栅格化系统支持 Flex 布局，允许子元素在父节点内的水平对齐方式 - 居左、居中、居右、等宽排列、分散排列。子元素与子元素之间，支持顶部对齐、垂直居中对齐、底部对齐的方式。同时，支持使用 order 来定义元素的排列顺序。</p> <p>Flex 布局是基于 24 栅格来定义每一个『盒子』的宽度，但不拘泥于栅格。</p> <h2 id="%E4%BB%A3%E7%A0%81%E6%BC%94%E7%A4%BA"><a class="header-anchor" href="#%E4%BB%A3%E7%A0%81%E6%BC%94%E7%A4%BA">#</a> 代码演示</h2> </div></div> '},109:function(t,a){t.exports=' <div class="content"><div class="markdown"><h1 id="grid-%E6%A0%85%E6%A0%BC"><a class="header-anchor" href="#grid-%E6%A0%85%E6%A0%BC">#</a> Grid 栅格</h1> <p>24 栅格系统</p> </div></div> '},110:function(t,a){t.exports=' <div class="content"><div class="markdown"><codebox> <code-preview-0 slot="code-preview"></code-preview-0> <section slot="text-place-holder"><h4 id="%E5%9F%BA%E7%A1%80%E6%A0%85%E6%A0%BC"><a class="header-anchor" href="#%E5%9F%BA%E7%A1%80%E6%A0%85%E6%A0%BC">#</a> 基础栅格</h4> <p>从堆叠到水平排列。使用单一的一组 <code>Row</code> 和 <code>Col</code> 栅格组件，就可以创建一个基本的栅格系统，所有列（Col）必须放在 <code>Row</code> 内。</p> </section> <div slot="code-place-holder"> <div class="markdown"><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>components-grid-demo-basic<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-row</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-col</span> <span class="token attr-name">span</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>col-12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-col</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-col</span> <span class="token attr-name">span</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>col-12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-col</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-row</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-row</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-col</span> <span class="token attr-name">span</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>col-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-col</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-col</span> <span class="token attr-name">span</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>col-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-col</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-col</span> <span class="token attr-name">span</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>col-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-col</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-row</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-row</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-col</span> <span class="token attr-name">span</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>col-6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-col</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-col</span> <span class="token attr-name">span</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>col-6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-col</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-col</span> <span class="token attr-name">span</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>col-6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-col</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-col</span> <span class="token attr-name">span</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>col-6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-col</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-row</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span>Col<span class="token punctuation">,</span> Row<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'santd/grid\'</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    components<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'s-col\'</span><span class="token operator">:</span> Col<span class="token punctuation">,</span>\n        <span class="token string">\'s-row\'</span><span class="token operator">:</span> Row\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre> </div> </div> </codebox></div></div> '},111:function(t,a){t.exports=' <div id="components-grid-demo-basic"> <s-row> <s-col span="12">col-12</s-col> <s-col span="12">col-12</s-col> </s-row> <s-row> <s-col span="8">col-8</s-col> <s-col span="8">col-8</s-col> <s-col span="8">col-8</s-col> </s-row> <s-row> <s-col span="6">col-6</s-col> <s-col span="6">col-6</s-col> <s-col span="6">col-6</s-col> <s-col span="6">col-6</s-col> </s-row> </div> '},116:function(t,a){t.exports=' <div class="content"><div class="markdown"><h2 id="api"><a class="header-anchor" href="#api">#</a> API</h2> <h3 id="row"><a class="header-anchor" href="#row">#</a> Row</h3> <table> <thead> <tr> <th>成员</th> <th>说明</th> <th>类型</th> <th>默认值</th> </tr> </thead> <tbody> <tr> <td>align</td> <td>flex 布局下的垂直对齐方式：<code>top</code> <code>middle</code> <code>bottom</code></td> <td>string</td> <td>top</td> </tr> <tr> <td>gutter</td> <td>栅格间隔，可以写成像素值或支持响应式的对象写法 <code>{ xs: 8, sm: 16, md: 24}</code></td> <td>number/object</td> <td>0</td> </tr> <tr> <td>justify</td> <td>flex 布局下的水平排列方式：<code>start</code> <code>end</code> <code>center</code> <code>space-around</code> <code>space-between</code></td> <td>string</td> <td>start</td> </tr> <tr> <td>type</td> <td>布局模式，可选 <code>flex</code>，<a href="http://caniuse.com/#search=flex">现代浏览器</a> 下有效</td> <td>string</td> <td></td> </tr> </tbody> </table> <h3 id="col"><a class="header-anchor" href="#col">#</a> Col</h3> <table> <thead> <tr> <th>成员</th> <th>说明</th> <th>类型</th> <th>默认值</th> </tr> </thead> <tbody> <tr> <td>offset</td> <td>栅格左侧的间隔格数，间隔内不可以有栅格</td> <td>number</td> <td>0</td> </tr> <tr> <td>order</td> <td>栅格顺序，<code>flex</code> 布局模式下有效</td> <td>number</td> <td>0</td> </tr> <tr> <td>pull</td> <td>栅格向左移动格数</td> <td>number</td> <td>0</td> </tr> <tr> <td>push</td> <td>栅格向右移动格数</td> <td>number</td> <td>0</td> </tr> <tr> <td>span</td> <td>栅格占位格数，为 0 时相当于 <code>display: none</code></td> <td>number</td> <td>-</td> </tr> <tr> <td>xs</td> <td><code>&lt;576px</code> 响应式栅格，可为栅格数或一个包含其他属性的对象</td> <td>number | object</td> <td>-</td> </tr> <tr> <td>sm</td> <td><code>≥576px</code> 响应式栅格，可为栅格数或一个包含其他属性的对象</td> <td>number | object</td> <td>-</td> </tr> <tr> <td>md</td> <td><code>≥768px</code> 响应式栅格，可为栅格数或一个包含其他属性的对象</td> <td>number | object</td> <td>-</td> </tr> <tr> <td>lg</td> <td><code>≥992px</code> 响应式栅格，可为栅格数或一个包含其他属性的对象</td> <td>number | object</td> <td>-</td> </tr> <tr> <td>xl</td> <td><code>≥1200px</code> 响应式栅格，可为栅格数或一个包含其他属性的对象</td> <td>number | object</td> <td>-</td> </tr> <tr> <td>xxl</td> <td><code>≥1600px</code> 响应式栅格，可为栅格数或一个包含其他属性的对象</td> <td>number | object</td> <td>-</td> </tr> </tbody> </table> <p>响应式栅格的断点扩展自 <a href="https://getbootstrap.com/docs/4.0/layout/overview/#responsive-breakpoints">BootStrap 4 的规则</a>（不包含链接里 occasionally 的部分)。</p> </div></div> '},125:function(t,a,n){"use strict";n.r(a);var s=n(0),e=n.n(s),o=n(65),p=n.n(o),c=n(66),l=n.n(c),r=n(67),u=n.n(r),d=n(69),i=n.n(d);a.default=e.a.defineComponent({components:{desc:p.a,head:l.a,basic:u.a,readme:i.a},template:"\n        <div>\n            <head/>\n            <desc/>\n            <basic/>\n            <readme/>\n        </div>\n    "})},38:function(t,a,n){"use strict";n.r(a),function(t){n.d(a,"default",(function(){return c}));var s,e,o,p=n(1);class c extends p.a{inited(){t.hub&&t.hub.fire&&t.hub.fire("changed",{level:0,children:[{level:2,title:"概述",hash:"%E6%A6%82%E8%BF%B0"},{level:2,title:"Flex 布局",hash:"flex-%E5%B8%83%E5%B1%80"},{level:2,title:"代码演示",hash:"%E4%BB%A3%E7%A0%81%E6%BC%94%E7%A4%BA"}]})}}o={},(e="components")in(s=c)?Object.defineProperty(s,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):s[e]=o}.call(this,n(3))},39:function(t,a,n){"use strict";n.r(a),function(t){n.d(a,"default",(function(){return c}));var s,e,o,p=n(1);class c extends p.a{inited(){t.hub&&t.hub.fire&&t.hub.fire("changed",{level:0})}}o={},(e="components")in(s=c)?Object.defineProperty(s,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):s[e]=o}.call(this,n(3))},40:function(t,a,n){"use strict";n.r(a),function(t){n.d(a,"default",(function(){return r}));var s,e,o,p=n(1),c=n(68),l=n.n(c);class r extends p.a{inited(){t.hub&&t.hub.fire&&t.hub.fire("changed",{level:0})}}s=r,e="components",o={"code-preview-0":l.a},e in s?Object.defineProperty(s,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):s[e]=o}.call(this,n(3))},42:function(t,a,n){"use strict";n.r(a),function(t){n.d(a,"default",(function(){return c}));var s,e,o,p=n(1);class c extends p.a{inited(){t.hub&&t.hub.fire&&t.hub.fire("changed",{level:0,children:[{level:2,title:"API",hash:"api",children:[{level:3,title:"Row",hash:"row"},{level:3,title:"Col",hash:"col"}]}]})}}o={},(e="components")in(s=c)?Object.defineProperty(s,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):s[e]=o}.call(this,n(3))},46:function(t,a,n){"use strict";n.r(a);var s=n(0),e=n.n(s),o=n(4);const p=Object(o.a)("col"),c=p(),l=["order","offset","pull","push"],r=["xs","sm","md","lg","xl","xxl"];var u=e.a.defineComponent({dataTypes:{span:s.DataTypes.oneOfType([s.DataTypes.string,s.DataTypes.number]),order:s.DataTypes.oneOfType([s.DataTypes.string,s.DataTypes.number]),offset:s.DataTypes.oneOfType([s.DataTypes.string,s.DataTypes.number]),push:s.DataTypes.oneOfType([s.DataTypes.string,s.DataTypes.number]),pull:s.DataTypes.oneOfType([s.DataTypes.string,s.DataTypes.number]),xs:s.DataTypes.oneOfType([s.DataTypes.number,s.DataTypes.string,s.DataTypes.object]),sm:s.DataTypes.oneOfType([s.DataTypes.number,s.DataTypes.string,s.DataTypes.object]),md:s.DataTypes.oneOfType([s.DataTypes.number,s.DataTypes.string,s.DataTypes.object]),lg:s.DataTypes.oneOfType([s.DataTypes.number,s.DataTypes.string,s.DataTypes.object]),xl:s.DataTypes.oneOfType([s.DataTypes.number,s.DataTypes.string,s.DataTypes.object]),xxl:s.DataTypes.oneOfType([s.DataTypes.number,s.DataTypes.string,s.DataTypes.object])},computed:{classes(){let t=[c],a=this.data;const n=a.get("span");n&&t.push(p(n));for(let n=0;n<l.length;n++){let s=l[n],e=a.get(s);e&&t.push(p(`${s}-${e}`))}for(let n=0;n<r.length;n++){let s=r[n],e=a.get(s);if(void 0===e)continue;let o="object"==typeof e?e||{}:{span:+e};void 0!==o.span&&t.push(p(`${s}-${o.span}`));for(let a=0;a<l.length;a++){let n=l[a];(o[n]||0==+o[n])&&t.push(p(`${s}-${n}-${o[n]}`))}}return t}},getGutter(t){let a=t.get("gutter");if("object"==typeof a){let n=t.get("screens");for(let t=0;t<r.length;t++){const s=r[t];if(n[s]&&null!=a[s])return a[s]}}return a},attached(){let t=this.parent;for(;t&&!(t instanceof g);)t=t.parent;if(t&&t.data){let a=+this.getGutter(t.data);a&&(a/=2,this.data.set("colStyle",`padding-left:${a};padding-right:${a};`))}},template:'\n        <div class="{{classes}}" style="{{colStyle}}">\n            <slot />\n        </div>\n    '});const d=Object(o.a)("row"),i=d();let k=null;if("undefined"!=typeof window){const t=t=>({media:t,matches:!1,addListener(){},removeListener(){}});window.matchMedia=window.matchMedia||t,k=n(112)}const h={xs:"(max-width: 575px)",sm:"(min-width: 576px)",md:"(min-width: 768px)",lg:"(min-width: 992px)",xl:"(min-width: 1200px)",xxl:"(min-width: 1600px)"},f=["xxl","xl","lg","md","sm","xs"];var g=e.a.defineComponent({dataTypes:{type:s.DataTypes.oneOf(["normal","flex"]),align:s.DataTypes.oneOf(["top","middle","bottom"]),gutter:s.DataTypes.oneOfType([s.DataTypes.number,s.DataTypes.string,s.DataTypes.object]),justify:s.DataTypes.oneOf(["start","end","center","space-around","space-between"])},computed:{classes(){let t=[i],a=this.data.get("type"),n=this.data.get("align"),s=this.data.get("justify");return"flex"===a&&(t.push(d(a)),n&&t.push(d(`${a}-${n}`)),s&&t.push(d(`${a}-${s}`))),t}},inited(){this._calcStyles=()=>{let t=+this.getGutter();t&&(t/=-2,this.data.set("styles",`margin-left: ${t}px; margin-right:${t}px;`))},this._calcStyles(),this.watch("gutter",this._calcStyles)},getGutter(){let t=this.data.get("gutter");if("object"==typeof t){let a=this.data.get("screens");for(let n=0;n<=f.length;n++){let s=f[n];if(a[s]&&null!=t[s])return t[s]}}return t},attached(){let t=+this.getGutter();if(t){const a=this.slot();a&&a.length&&(t/=2,function t(a,n){a&&a.length&&a.forEach(a=>{a instanceof u&&a.data.set("colStyle",`padding-left:${n}px;padding-right:${n}px;`),t(a.children,n)})}(a,t))}this.nextTick(()=>{f.forEach(t=>k.register(h[t],{match:()=>{let a=+this.data.get("gutter");isNaN(a)||this.data.merge("screens",{[t]:!0})},unmatch:()=>{let a=+this.data.get("gutter");isNaN(+a)||this.data.merge("screens",{[t]:!1})},destroy(){}}))})},disposed(){f.forEach(t=>k.unregister(h[t]))},initData:()=>({screens:{},type:"normal",gutter:0}),template:'\n        <div class="{{classes}}" style="{{styles}}">\n            <slot />\n        </div>\n    '});a.default={components:{"s-col":u,"s-row":g}}},65:function(t,a,n){var s=n(2),e=n(108),o=n(38).default;t.exports=n(38),t.exports.default=s(o,e,[])},66:function(t,a,n){var s=n(2),e=n(109),o=n(39).default;t.exports=n(39),t.exports.default=s(o,e,[])},67:function(t,a,n){var s=n(2),e=n(110),o=n(40).default;t.exports=n(40),t.exports.default=s(o,e,[])},68:function(t,a,n){var s=n(2),e=n(111),o=n(46).default;t.exports=n(46),t.exports.default=s(o,e,[])},69:function(t,a,n){var s=n(2),e=n(116),o=n(42).default;t.exports=n(42),t.exports.default=s(o,e,[])}});